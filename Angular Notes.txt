Angular 8/9/10
--------------------------
1)Angular is an open source,cross platform,
2)it provides end to end solution for building,debugging,testing and deploying.
3)it provides testing framework like jasmine,karma,protractor.
4)language used for angular is typescript.It support oops.
5)Framework supported are MVC,MVVM
6)it is also used for cross flatform mobile and web appliaction.
7)it is used for SPA (single page application) .
8)it has high speed and performance is better as compared to older technolgy 
used webpages.
9)Angular use AOT compiler.[Ahead-of-time].
*it converts typescript code into efficient javascript code before building phase .
before browser downloads and runs that code.
It provides faster rendering.
10)Previous version used JIT compiler [just-in-time]
*it compiles your code after the page is loaded into the browser.   
---------------------------------------------------------------------------------------------
steps for Installation
--------------------------------------
1)npm install -g @angular/cli
2)C:\projects-workspace> ng new amazon
3)C:\projects-workspace\amazon>ng serve 
4)Browser- Application starts on Live Server listening on http://localhost:4200
To create subfolders
5)C:\Users\sandip\Desktop\amazon\src\app>ng g c login --skipTests
----------------------------------------------------------------------------------------------------

App folder
--------------------
1)app.component.html-------------Presentation(View)
2)app.component.ts ----------------Logic
3)app.component.css----------------styles
4)app.component.spec.tc-----------Testing
-----------------------------------------------------------------
app.module.ts
----------------------
1)it contains the list of files used in your project.
2)every modules or library that you want to use in your project should be configured 
in app.module.ts
3)In a project there will ne many folder each folder will have .html,.css,.ts,.spec.tc
but only one app.module.ts
--------------------------------------
1)NgModule({}) :- information about your application provided to complier.
2)declaration :- registers your component.//components are classes in Angular.
3)imports:- registers your modules.
4)provider:- registers your services.//functions 
5)bootstrap:-specify the component to start with.
------------------------------------------------------------------------------
@Component :-
----------------------
1)It is derived from "Component" base of "@angular/core" library.
2)every component in angular is comprises of presentation,logic and styles.
3)logic is written in typescipt which is compiled into javascript.
4)@Compoment ({property:value,property:value})
5)@Component() Decorator that marks a class as an Angular component. and provides configuration metadata that determines how the component should be processed,instantiated and used at runtime.
*how it will function :- feedback,contact,registration

1)selector :<app-home></app-home> .This is from index.html.
2)template:Here directly we write the html code to render.
3)templateUrl:Here we give the path of the html file.
4)styles:It is a collection of style properties and their values.
5)styleUrls:It can access styles from an enternal stylesheet.
6)animations:it use a set of CSS keyframes to use for animations.
--------------------------------------------------------------------------------------------
Data binding
-------------------------
<input type=text name=t1 size=20>
t1=sandip
---------------------------------------------------------------
There are 2 ways of data binding
--------------------------------------------------
one way data binding
1)interpolation
we use double curly braces {{}} and is known as interpolation or template expression.
example:- 
we are assigning some value in the "app.component.ts" and the value displayed on the html page.
{{name}}
<p>The sum of 6 and 7 is {{6+7}} </p>
<p>The multiplcation of 6 and 7 is {{6*7}} </p>
--------------------------------------------------------------------
2)property binding
------------------------------
In this we use square brackets to the DOM properties.
example:-
<img[src]="shoe.jpg">
-------------------------------------------------------------------
3)event binding
-----------------------
in this we use circular brackets .it is mostly used with buttons.
we put event in parentheses.
example:-
<button (click)="onSave()">Save</button>

2)two way data binding
---------------------------------------
In this user can update the entry .A change made to the user entry in the html input element we require two-way binding.
example
Enter your name<input type=text name=t1 size=20> 

[(value)] ="expression";
Enter your name<input type=text [(ngModel)]="name">
----------------------------------------------------------------------------------------
app.module.ts
---------------------------
1)import { FormsModule } from '@angular/forms';
2)import[FormsModule]
FormsModule ==>package
@angular/forms ==>Library
---------------------------------------------------------------------------------------------------------- 
In 2 way binding we have 
MVC -Angular follow it.

Model---------data stored and updated
view -----------The output screen
controller-----The .ts file 
-----------------------------------------------------------------------------------------------------------------
one way binding
-------------------------
oneway.component.ts
-----------------------------------
selector:'app-root';
templateUrl:'oneway.component.html';
export class OnewayComponent
{
public product=
{
Name='Samsung TV',
Price:45000.44;
}}
----------------------------------------------------
<dl>
<dt>Name</dt>
<dd>{{product.Name}}</dd>
<dd><input type=text value={{product.Name}}></dd>
<dt>Price</dt>
<dd>{{product.Price}}</dd>
<dd><input type=text value={{product.Price}}></dd>
<dd innerHTML={{product.Price}}></dd>
</dl>
------------------------------
create folder
---------------------
1)desktop/flipcard/src/app>ng g c oneway --skipTests

oneway
 	oneway.component.ts
	oneway.component.css
	oneway.component.html
*automatically app.module.ts will be updated
-------------------------------------------------------------
2)change in index.html <-----<app-root></app-root>
3)change in bootstrap[OnewayComponent]   <--app.module.ts

------------------------------------------------------------------
oneway.component.ts
----------------------------------
import { Component } from '@angular/core';

@Component({
  selector: 'app-root',
  templateUrl: './Oneway.component.html'
  })
export class OnewayComponent {
    public product = {
      Name: 'Samsung TV',
      Price: 45000.55
    };
 }
-----------------------------------------------------------
oneway.component.html
-------------------------------------
<div class="container">
    <h2>Product Details</h2><hr>
    <dl>
        <dt>Name</dt>
        <dd>{{product.Name}}</dd>
        <dd><input type="text" value="{{product.Name}}"></dd>
        <dt>Price</dt>
        <dd innerHTML="{{product.Price}}"></dd>
    </dl>
  </div>
-------------------------------------------------------------------------
1)create folder by name :- twowaybinding
desktop/flipcard/src/app>ng g c twowaybinding --skipTests
2)change in index.html
3)change in app.module.ts
--------------------------------------------------------------------------


1. twowaybinding.component.ts
--------------------------------------------------
import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-twowaybinding',  <---index.html
  templateUrl: './twowaybinding.component.html',
  styleUrls: ['./twowaybinding.component.css']
})
export class TwowaybindingComponent  <---app.module.ts (bootstrap)
{  
 public name = 'Samsung TV';
 public city = 'Delhi';
 public inStock = true;
 public product = {
   Name: '',
   City: '',
   InStock: false
 };
 public UpdateClick() {
   this.product = {
     Name: this.name,
     City: this.city,
     InStock: this.inStock
   };
 }
}
---------------------------------------------------------------------------------------------
2. twowaybinding.component.html
-------------------------------------------------------
<div class="container-fluid">
<h2 class="text-center text-primary">Two Way Binding</h2>
<div class="row">
  <div class="col-3">
    <div class="form-group">
        <label>Name</label>
        <div>
            <input [(ngModel)]="name" type="text" class="form-control">
        </div>
    </div>
    <div class="form-group">
      <label>Shipped To</label>
      <div>
          <select [(ngModel)]="city" class="form-control">
            <option>Delhi</option>
            <option>Hyderabad</option>
          </select>
      </div>
    </div>
    <div class="form-group">
        <label>Is In Stock</label>
        <div>
            <input [(ngModel)]="inStock" type="checkbox"> Yes
        </div>
    </div>
    <div class="form-group">
      <button (click)="UpdateClick()" class="btn btn-primary btn-block">Update</button>
    </div>
  </div>
  <div class="col-9">
    <table class="table table-hover">
        <colgroup span="1" style="background-color: aquamarine;"></colgroup>
        <tr>
            <td>Name</td>
            <td [innerHTML]="product.Name"></td>
        </tr>
        <tr>
            <td>Shipped To</td>
            <td>{{product.City}}</td>
        </tr>
        <tr>
            <td>Stock Status</td>
            <td>{{(product.InStock==true)?"Available":"Out of Stock"}}</td>
        </tr>
    </table>
  </div>
</div>
</div>
 -----------------------------------------------------------------------------
1. ifdemo.component.ts(Directives)

import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-ifdemo',
  templateUrl: './ifdemo.component.html',
  styleUrls: ['./ifdemo.component.css']
})
export class IfdemoComponent {
   public product = {
     Name: 'Nike Casuals',
     Price: 4500.55,
     Photo: 'assets/shoe.jpg'
   };
   public showImage = false;
   public btnText = 'Show';
   public TogglePreview() {
      this.showImage = (this.showImage==false)?true:false;
      this.btnText = (this.btnText=='Show')?'Hide':'Show';
   }
}

-------------------------------------------------------------------------------
2. ifdemo.component.html
<!DOCTYPE html>
<html lang="en">
<head>
  <title>Bootstrap Example</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.2/jquery.min.js"></script>
  <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
</head>

<div class="container-fluid">
<h2>Product Details</h2>
<div class="row">
  <div class="col-3">
      <dl>
          <dt>Name</dt>
          <dd>{{product.Name}}</dd>
          <dt>Price</dt>
          <dd>{{product.Price}}</dd>
      </dl>
      <button (click)="TogglePreview()" class="btn btn-primary btn-sm btn-block">{{btnText}} Preview</button>
  </div>
  <div class="col-9">
    <div *ngIf="showImage">
        <img [src]="product.Photo" height="200" width="200" >
 	<------ getting input from the user./flipcard/amazon/dinamic
            <img src="assets/shoe.jpg" height="200" width="200" > <-----static /hardcording the path.
    </div>
  </div>
</div>
</div>
----------------------------------------------------------------------------------------------------- 
Example-7(ngSwitch)
1.Switchdemo.component.ts

import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-switchdemo',
  templateUrl: './switchdemo.component.html',
  styleUrls: ['./switchdemo.component.css']
})
export class SwitchdemoComponent{
   public product = {
     Name: 'Nike Casuals',
     Price: 4500.55,
     Photo: 'assets/shoe.jpg',
     Description: 'Something about Nike Casuals...'
   };
   public selectedView = 'info';
   public views = ['info', 'preview', 'more'];
   public count = 0;
   public ChangeView(obj) {
      this.selectedView = obj.target.name;
   }
   public NextClick(){
     this.count++;
     this.selectedView = this.views[this.count];
   }
   public PrevClick(){
     this.count--;
     this.selectedView = this.views[this.count];
   }
}
--------------------------------------------------------------------------------------------------
2.Switchdemo.component.html
<div class="container-fluid">
 <h2 class="text-primary text-center"><span class="fa fa-shopping-cart"></span>Amazon Shopping</h2>
 <div class="btn-toolbar bg-danger justify-content-between">
  <div class="btn-group">
    <button (click)="ChangeView($event)" name="info" class="btn btn-danger">Basic Details</button>
    <button (click)="ChangeView($event)" name="preview" class="btn btn-danger">Preview</button>
    <button (click)="ChangeView($event)" name="more" class="btn btn-danger">More..</button>
  </div>
  <div class="btn-group">
    <button (click)="PrevClick()" class="btn btn-danger"><span class="fa fa-chevron-circle-left"></span></button>
    <button (click)="NextClick()" class="btn btn-danger"><span class="fa fa-chevron-circle-right"></span></button>
  </div>
 </div>
 <div class="row" style="margin: 20px;">
    <!--Main Container-->
  <div [ngSwitch]="selectedView">
    <!--info card-->    
    <div class="card" *ngSwitchCase="'info'">
        <div class="card-header">
            <h2>{{product.Name}}</h2>
        </div>
        <div class="card-body">
            <h4>{{product.Price}}</h4>
        </div>
    </div>
    <!--Preview card-->
    <div class="card" *ngSwitchCase="'preview'">
        <div class="card-body">
            <img [src]="product.Photo" width="200" height="200" >
        </div>
    </div>
    <!--Description Card-->
    <div class="card" *ngSwitchCase="'more'">
        <div class="card-header">
            <h3>Description</h3>
        </div>
        <div class="card-body">
            <p>{{product.Description}}</p>
        </div>
    </div>
  </div>
 </div>
</div>
-------------------------------------------------------------------------------
Example-8(ngFor)
1.fordemo.component.ts
import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-fordemo',
  templateUrl: './fordemo.component.html',
  styleUrls: ['./fordemo.component.css']
})
export class FordemoComponent {
  public categories = ['Electronics', 'Footwear', 'Fashion'];
  public menudata = [
    {Category: 'Electronics', Products: ['Samsung TV', 'JBL Speaker']},
    {Category: 'Footwear', Products: ['Nike Casuals', 'Lee Cooper Boot']}
  ];
}
-----------------------------------------------------------------------------------------------------------------
2.fordemo.component.html
<div class="container-fluid">
 <div class="row">
  <div class="col-3">
    <h3>Categories</h3>
    <ol>
        <li *ngFor="let item of categories">{{item}}</li>
    </ol>
  </div>
  <div class="col-3">
    <h3>Categories</h3>
    <select class="form-control">
        <option *ngFor="let item of categories">
            {{item}}
        </option>
    </select>
  </div>
  <div class="col-3">
    <h3>Categories</h3>
    <table class="table table-hover">
      <tbody>
          <tr *ngFor="let item of categories">
              <td><a href="#">{{item}}</a></td>
          </tr>
      </tbody>
    </table>
  </div>
 </div>
 <div class="row" style="margin-top: 20px;">
    <div class="col-3">
        <h3>Menu</h3>
        <ol>
            <li *ngFor="let item of menudata">
                {{item.Category}}
                <ol type="a">
                    <li *ngFor="let product of item.Products">
                        {{product}}
                    </li>
                </ol>
            </li>
        </ol>
    </div>
    <div>
        <h3>Menu</h3>
        <select class="form-control">
            <optgroup *ngFor="let item of menudata" label="{{item.Category}}">
                <option *ngFor="let product of item.Products">
                    {{product}}
                </option>
            </optgroup>
        </select>
    </div>
    <div class="col-3">
        <h3>Menu</h3>
        <div *ngFor="let item of menudata">
            <details>
                <summary>{{item.Category}}</summary>
                <ol>
                    <li *ngFor="let product of item.Products">
                        {{product}}
                    </li>
                </ol>
            </details>
        </div>
    </div>
 </div>
</div>
-------------------------------------------------------------------------------------------------------------------------------




























